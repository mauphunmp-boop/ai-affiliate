# Sample Cloudflare Tunnel configuration for the AI Affiliate project.
# Copy this file to one of the supported locations (prefer project root or %USERPROFILE%/.cloudflared/config.yml)
# and adjust the credentials-file path + tunnel UUID accordingly.

# Name of the existing tunnel (created with `cloudflared tunnel create core-backend`).
tunnel: core-backend

# Path to the credentials JSON produced during tunnel creation.
# On Windows this often lives under: C:\Users\<USER>\.cloudflared\<UUID>.json
# Path to the credentials JSON produced during tunnel creation.
# On Linux this is often /etc/cloudflared/<UUID>.json when created as root
# or ~/.cloudflared/<UUID>.json for a regular user.
# If you run with a TUNNEL_TOKEN env (recommended for headless servers), you can omit credentials-file.
# credentials-file: /etc/cloudflared/<UUID>.json

# Ingress rules: order matters. First match wins.
ingress:
  # Admin UI (production build served by Nginx in affiliate_ai_frontend)
  # For development (Vite dev server), switch to http://localhost:5173 instead.
  - hostname: admin.tuvanmuasam.app
    service: http://localhost:8081
    originRequest:
      httpHostHeader: admin.tuvanmuasam.app

  # Backend API (FastAPI / Uvicorn)
  - hostname: api.tuvanmuasam.app
    service: http://localhost:8000
    originRequest:
      httpHostHeader: api.tuvanmuasam.app

  # Apex domain — customer-facing Chat UI (production build served by Nginx in affiliate_ai_customer_ui)
  - hostname: tuvanmuasam.app
    service: http://localhost:8080
    originRequest:
      httpHostHeader: tuvanmuasam.app

  # Optional: www alias → same Chat UI
  - hostname: www.tuvanmuasam.app
    service: http://localhost:8080
    originRequest:
      httpHostHeader: www.tuvanmuasam.app

  # Catch-all: return 404 for anything else
  - service: http_status:404

# Optional performance / connection tuning (uncomment & adjust as needed)
# warp-routing:
#   enabled: true
# originRequest:
#   connectTimeout: 10s
#   tcpKeepAlive: 30s
#   noTLSVerify: false

# Optional: Log level (info|warn|error|debug)
# loglevel: info
