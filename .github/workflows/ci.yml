name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements.txt
            requirements-dev.txt
      - name: Install Python deps (pinned)
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt -r requirements-dev.txt
          pip install ruff mypy
      - name: Lint (ruff)
        run: ruff check .
      - name: Type check (mypy)
        run: mypy backend
      - name: Run backend tests
        env:
          AT_MOCK: '1'
          DATABASE_URL: sqlite:///:memory:
        run: |
          python -m pytest backend/tests --maxfail=1 --disable-warnings -q --cov=backend --cov-report=term-missing --cov-fail-under=70

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm install --no-audit --no-fund; fi
      - name: Build
        run: npm run build --silent
      - name: Unit tests
        run: npm test --silent

  frontend-customer:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend-customer
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-customer/package-lock.json
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm install --no-audit --no-fund; fi
      - name: Build
        run: npm run build --silent
